# This is a basic workflow that is manually triggered

name: compile dig

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: [push, pull_request, workflow_dispatch]

# This workflow makes x86_64 binaries for mac, windows, and linux.

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        targetos: [darwin, linux]
        include:
          - targetos: windows
            arch: amd64
    name: dig ${{ matrix.arch }} for ${{ matrix.targetos }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2.1.3
        with: 
          go-version: '^1.17'
        env:
          GOOS: ${{ matrix.targetos }}
          GOARCH: ${{ matrix.arch }}

      - name: Compile dig
        run: |
          go mod download
          cd cmd/digd
          go build .
          go install .

      - name: Install runsim
        run: export GO111MODULE="on" && go get github.com/cosmos/tools/cmd/runsim@v1.0.0
      - uses: actions/cache@v1
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary

      - name: validate genesis
        run: |
          cd cmd/digd
          ./digd init validate 
          cp ../../networks/mainnets/dig-1/genesis.json ~/.dig/config
          ./digd validate-genesis

      - name: single node
        run: |
          cd cmd/digd
          ./digd keys add test --keying-backend test
          ./digd create-genesis-account billy 99999999999999999999999999999999udig --from test --keyring-backend test
          ./digd gentx billy 89999999999999999999999999999999udig --from test --keyring-backend test --chain-id dig
          ./digd collect-gentxs
          ./digd start


        
# now uploads genesis.json and bin
      - uses: actions/upload-artifact@v2
        with:
          name: digd ${{ matrix.targetos }} ${{ matrix.arch }}
          path: cmd/digd


  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"


  #  test-sim-nondeterminism:
  #    runs-on: ubuntu-latest
  #    needs: Build
  #    steps:
  #      - uses: actions/checkout@v2
  #      - uses: actions/setup-go@v2.1.3
  #        with:
  #          go-version: 1.16
  #      - uses: technote-space/get-diff-action@v4
  #        with:
  #          PATTERNS: |
  #            **/**.go
  #            go.mod
  #            go.sum
  #      - uses: actions/cache@v1
  #        with:
  #          path: ~/go/bin
  #          key: ${{ runner.os }}-go-runsim-binary
  #        if: "env.GIT_DIFF != ''"
  #      - name: test nondeterminism
  #        run: |
  #          make test-sim-nondeterminism
  #        if: "env.GIT_DIFF != ''"

  test-sim-import-export:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.17
      - uses: actions/cache@v1
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary
        if: "env.GIT_DIFF != ''"
      - name: test-sim-import-export
        run: |
          make test-sim-import-export
        if: "env.GIT_DIFF != ''"

  test-sim-after-import:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.17
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/cache@v1
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary
        if: "env.GIT_DIFF != ''"
      - name: test after import
        run: |
          make test-sim-after-import
        if: "env.GIT_DIFF != ''"

  test-sim-multi-seed-short:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.17
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/cache@v2.1.3
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary
        if: "env.GIT_DIFF != ''"
      - name: test-sim-multi-seed-short
        run: |
          make test-sim-multi-seed-short
        if: "env.GIT_DIFF != ''"

  test-liveness:
    runs-on: ubuntu-latest
    needs: Build
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.17
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: start localnet
        run: |
          make clean localnet-start
        if: "env.GIT_DIFF != ''"
      - name: test liveness
        run: |
          ./contrib/localnet-blocks-test.sh 100 5 50 localhost
        if: "env.GIT_DIFF != ''"